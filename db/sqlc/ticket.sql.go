// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: ticket.sql

package db

import (
	"context"
	"database/sql"
	"encoding/json"
	"time"
)

const getTicketDetails = `-- name: GetTicketDetails :one
SELECT 
    oc.province AS "origin",
    dc.province AS "destination",
    t.departure_time,
    t.arrival_time,
    t.amount,
    v.capacity,
    v.vehicle_type,
    v.feature,
    b."VIP",
    b.bed_chair,
    tr.rank,
    tr.have_compartment,
    a.flight_class,
    a.name AS airplane_name

FROM "ticket" t
INNER JOIN "vehicle" v ON t.vehicle_id = v.id
LEFT JOIN "bus" b ON b.vehicle_id = v.id 
LEFT JOIN "train" tr ON tr.vehicle_id = v.id 
LEFT JOIN "airplane" a ON a.vehicle_id = v.id 
INNER JOIN "route" ro ON t.route_id = ro.id
INNER JOIN "city" oc ON oc.id = ro.origin_city_id
INNER JOIN "city" dc ON dc.id = ro.destination_city_id
WHERE t.id = $1
`

type GetTicketDetailsRow struct {
	Origin          string          `json:"origin"`
	Destination     string          `json:"destination"`
	DepartureTime   time.Time       `json:"departure_time"`
	ArrivalTime     time.Time       `json:"arrival_time"`
	Amount          int64           `json:"amount"`
	Capacity        int32           `json:"capacity"`
	VehicleType     VehicleType     `json:"vehicle_type"`
	Feature         json.RawMessage `json:"feature"`
	VIP             sql.NullBool    `json:"VIP"`
	BedChair        sql.NullBool    `json:"bed_chair"`
	Rank            sql.NullInt32   `json:"rank"`
	HaveCompartment sql.NullBool    `json:"have_compartment"`
	FlightClass     NullFlightClass `json:"flight_class"`
	AirplaneName    sql.NullString  `json:"airplane_name"`
}

func (q *Queries) GetTicketDetails(ctx context.Context, id int64) (GetTicketDetailsRow, error) {
	row := q.db.QueryRowContext(ctx, getTicketDetails, id)
	var i GetTicketDetailsRow
	err := row.Scan(
		&i.Origin,
		&i.Destination,
		&i.DepartureTime,
		&i.ArrivalTime,
		&i.Amount,
		&i.Capacity,
		&i.VehicleType,
		&i.Feature,
		&i.VIP,
		&i.BedChair,
		&i.Rank,
		&i.HaveCompartment,
		&i.FlightClass,
		&i.AirplaneName,
	)
	return i, err
}
