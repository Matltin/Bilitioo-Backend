// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://localhost:3000/swagger/index.html",
        "contact": {
            "name": "API Support",
            "url": "http://www.example.com/support",
            "email": "support@example.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/city": {
            "get": {
                "description": "Returns a list of all available cities.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cities"
                ],
                "summary": "Get all cities",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.CityResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns a list of tickets for a specific route and vehicle type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tickets"
                ],
                "summary": "Search tickets by origin, destination, and vehicle type",
                "parameters": [
                    {
                        "description": "Search Parameters",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.searchTicketsByCitiesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.SearchTicketsByCitiesRow"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/payment": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates payment and reservation status. Requires authentication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payment"
                ],
                "summary": "Pay for a reservation",
                "parameters": [
                    {
                        "description": "Payment request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.payPaymentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/verify-email": {
            "get": {
                "description": "Verifies a user's email using the verification link parameters (id and secret_code).",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Verify user's email",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "description": "Verification ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Secret verification code",
                        "name": "secret_code",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.CityResponse": {
            "type": "object",
            "properties": {
                "county": {
                    "type": "string"
                },
                "province": {
                    "type": "string"
                }
            }
        },
        "api.payPaymentRequest": {
            "type": "object",
            "required": [
                "payment_id",
                "payment_status",
                "reservation_status",
                "type"
            ],
            "properties": {
                "payment_id": {
                    "type": "integer"
                },
                "payment_status": {
                    "type": "string",
                    "enum": [
                        "PENDING",
                        "COMPLETED",
                        "FAILED",
                        "REFUNDED"
                    ]
                },
                "reservation_status": {
                    "type": "string",
                    "enum": [
                        "RESERVED",
                        "RESERVING",
                        "CANCELED",
                        "CANCELED-BY-TIME"
                    ]
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "CASH",
                        "CREDIT_CARD",
                        "WALLET",
                        "BANK_TRANSFER",
                        "CRYPTO"
                    ]
                },
                "user_activity_id": {
                    "type": "integer"
                }
            }
        },
        "api.searchTicketsByCitiesRequest": {
            "type": "object",
            "required": [
                "destination_city_id",
                "origin_city_id",
                "vehicle_type"
            ],
            "properties": {
                "destination_city_id": {
                    "type": "integer"
                },
                "origin_city_id": {
                    "type": "integer"
                },
                "vehicle_type": {
                    "type": "string",
                    "enum": [
                        "BUS",
                        "AIRPLANE",
                        "TRAIN"
                    ]
                }
            }
        },
        "db.CheckReservationTicketStatus": {
            "type": "string",
            "enum": [
                "RESERVED",
                "NOT_RESERVED"
            ],
            "x-enum-varnames": [
                "CheckReservationTicketStatusRESERVED",
                "CheckReservationTicketStatusNOTRESERVED"
            ]
        },
        "db.SearchTicketsByCitiesRow": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "arrival_time": {
                    "type": "string"
                },
                "capacity": {
                    "type": "integer"
                },
                "company_name": {
                    "type": "string"
                },
                "departure_time": {
                    "type": "string"
                },
                "destination_city_id": {
                    "type": "integer"
                },
                "destination_county": {
                    "type": "string"
                },
                "destination_province": {
                    "type": "string"
                },
                "origin_city_id": {
                    "type": "integer"
                },
                "origin_county": {
                    "type": "string"
                },
                "origin_province": {
                    "type": "string"
                },
                "route_id": {
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/db.CheckReservationTicketStatus"
                },
                "ticket_id": {
                    "type": "integer"
                },
                "vehicle_type": {
                    "$ref": "#/definitions/db.VehicleType"
                }
            }
        },
        "db.VehicleType": {
            "type": "string",
            "enum": [
                "BUS",
                "TRAIN",
                "AIRPLANE"
            ],
            "x-enum-varnames": [
                "VehicleTypeBUS",
                "VehicleTypeTRAIN",
                "VehicleTypeAIRPLANE"
            ]
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:3000",
	BasePath:         "/",
	Schemes:          []string{"http"},
	Title:            "Bilitio API",
	Description:      "API for Bilitio ticket booking system.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
