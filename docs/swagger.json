{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "API for Bilitio ticket booking system.",
        "title": "Bilitio API",
        "termsOfService": "http://localhost:3000/swagger/index.html",
        "contact": {
            "name": "API Support",
            "url": "http://www.example.com/support",
            "email": "support@example.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0"
    },
    "host": "localhost:3000",
    "basePath": "/",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Login user using email or phone number. Returns an access token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Log in a user",
                "parameters": [
                    {
                        "description": "Login request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.logInUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.logInUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Register a new user using email or phone number. Sends a verification email after signup.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "Signup request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.signUpUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/city": {
            "get": {
                "description": "Returns a list of all cities available for booking.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cities"
                ],
                "summary": "Get all cities",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.CityResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/payment": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates payment and reservation status. Requires authentication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payment"
                ],
                "summary": "Pay for a reservation",
                "parameters": [
                    {
                        "description": "Payment request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.payPaymentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/penalty/{ticket_id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Cancel a ticket reservation and calculate penalty refund. Requires authentication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reservation"
                ],
                "summary": "Cancel a reservation",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Ticket ID",
                        "name": "ticket_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.cancelReservationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/profile": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get the profile of the authenticated user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get user profile",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.GetUserProfileRow"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update user profile details including name, contact info, password, and profile picture",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Update user profile",
                "parameters": [
                    {
                        "description": "Profile update payload",
                        "name": "updateProfileRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.updateProfileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.updateProfileResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/reports": {
            "get": {
                "description": "Get all reports from the database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reports"
                ],
                "summary": "Get all reports",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.Report"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "User creates a new report",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reports"
                ],
                "summary": "Create a report",
                "parameters": [
                    {
                        "description": "Report creation",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.createReportRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.Report"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/reports/answer": {
            "post": {
                "description": "Admin answers a user report",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reports"
                ],
                "summary": "Answer a report",
                "parameters": [
                    {
                        "description": "Report answer",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.answerReportRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.Report"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/reports/ticket": {
            "put": {
                "description": "Admin updates a ticket status based on a report",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reports"
                ],
                "summary": "Update ticket by report",
                "parameters": [
                    {
                        "description": "Ticket update",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.updateTicketByReportRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/reservations": {
            "post": {
                "description": "Creates reservations for selected tickets and generates a payment record",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reservations"
                ],
                "summary": "Create a reservation",
                "parameters": [
                    {
                        "description": "Reservation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.createReservationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reservations and payment",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/reservations/user": {
            "get": {
                "description": "Retrieves all reservations of the authenticated user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reservations"
                ],
                "summary": "Get all user reservations",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.GetAllUserReservationRow"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/reservations/user/completed": {
            "get": {
                "description": "Retrieves all completed reservations of the authenticated user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reservations"
                ],
                "summary": "Get completed user reservations",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.GetCompletedUserReservationRow"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/ticket-penalties/{ticket_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve penalties associated with a specific ticket. Requires authentication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Penalties"
                ],
                "summary": "Get penalties for a ticket",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Ticket ID",
                        "name": "ticket_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of penalties",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.Penalty"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/tickets": {
            "get": {
                "description": "Retrieve all tickets from the system",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tickets"
                ],
                "summary": "Get all tickets",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.Ticket"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/tickets/search": {
            "post": {
                "description": "Search tickets by origin, destination, date, and vehicle type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tickets"
                ],
                "summary": "Search tickets",
                "parameters": [
                    {
                        "description": "Search tickets request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.searchTicketsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.Ticket"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/tickets/user/completed": {
            "get": {
                "description": "Get all tickets the authenticated user has completed",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tickets"
                ],
                "summary": "Get completed tickets for user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.Ticket"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/tickets/user/not-completed": {
            "get": {
                "description": "Get all tickets the authenticated user has reserved but not completed",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tickets"
                ],
                "summary": "Get not completed tickets for user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.Ticket"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/tickets/{ticket_id}": {
            "get": {
                "description": "Retrieve detailed info for a ticket by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tickets"
                ],
                "summary": "Get ticket details",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Ticket ID",
                        "name": "ticket_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/verify-email": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Confirms email ownership by validating a verification code. Requires authentication if user is logged in.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Verify user email",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.CityResponse": {
            "type": "object",
            "properties": {
                "county": {
                    "type": "string"
                },
                "province": {
                    "type": "string"
                }
            }
        },
        "api.answerReportRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "response_text": {
                    "type": "string"
                }
            }
        },
        "api.cancelReservationResponse": {
            "type": "object",
            "properties": {
                "amount_refunded": {
                    "type": "integer"
                },
                "change_reservation": {
                    "$ref": "#/definitions/db.ChangeReservation"
                },
                "message": {
                    "type": "string"
                },
                "ticket_id": {
                    "type": "integer"
                }
            }
        },
        "api.createReportRequest": {
            "type": "object",
            "properties": {
                "request_text": {
                    "type": "string"
                },
                "request_type": {
                    "type": "string"
                },
                "reservation_id": {
                    "type": "integer"
                }
            }
        },
        "api.createReservationRequest": {
            "type": "object",
            "required": [
                "tickets"
            ],
            "properties": {
                "tickets": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "api.logInUserRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                }
            }
        },
        "api.logInUserResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/db.GetUserRow"
                }
            }
        },
        "api.payPaymentRequest": {
            "type": "object",
            "required": [
                "payment_id",
                "payment_status",
                "reservation_status",
                "type"
            ],
            "properties": {
                "payment_id": {
                    "type": "integer"
                },
                "payment_status": {
                    "type": "string",
                    "enum": [
                        "PENDING",
                        "COMPLETED",
                        "FAILED",
                        "REFUNDED"
                    ]
                },
                "reservation_status": {
                    "type": "string",
                    "enum": [
                        "RESERVED",
                        "RESERVING",
                        "CANCELED",
                        "CANCELED-BY-TIME"
                    ]
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "CASH",
                        "CREDIT_CARD",
                        "WALLET",
                        "BANK_TRANSFER",
                        "CRYPTO"
                    ]
                },
                "user_activity_id": {
                    "type": "integer"
                }
            }
        },
        "api.searchTicketsByCitiesRequest": {
            "type": "object",
            "required": [
                "destination_city_id",
                "origin_city_id",
                "vehicle_type"
            ],
            "properties": {
                "destination_city_id": {
                    "type": "integer"
                },
                "origin_city_id": {
                    "type": "integer"
                },
                "vehicle_type": {
                    "type": "string",
                    "enum": [
                        "BUS",
                        "AIRPLANE",
                        "TRAIN"
                    ]
                }
            }
        },
        "api.searchTicketsRequest": {
            "type": "object",
            "required": [
                "departure_date",
                "destination_city_id",
                "origin_city_id",
                "vehicle_type"
            ],
            "properties": {
                "departure_date": {
                    "type": "string"
                },
                "destination_city_id": {
                    "type": "integer"
                },
                "origin_city_id": {
                    "type": "integer"
                },
                "vehicle_type": {
                    "type": "string",
                    "enum": [
                        "BUS",
                        "TRAIN",
                        "AIRPLANE"
                    ]
                }
            }
        },
        "api.signUpUserRequest": {
            "type": "object",
            "required": [
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                },
                "phone_number": {
                    "type": "string"
                }
            }
        },
        "api.updateProfileRequest": {
            "type": "object",
            "properties": {
                "city_id": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "national_code": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "pic_dir": {
                    "type": "string"
                }
            }
        },
        "api.updateProfileResponse": {
            "type": "object",
            "properties": {
                "profile": {
                    "$ref": "#/definitions/db.Profile"
                },
                "user": {
                    "$ref": "#/definitions/db.User"
                }
            }
        },
        "api.updateTicketByReportRequest": {
            "type": "object",
            "properties": {
                "reserevation_id": {
                    "type": "integer"
                },
                "to_status_reservation": {
                    "type": "string"
                }
            }
        },
        "db.ChangeReservation": {
            "type": "object",
            "properties": {
                "admin_id": {
                    "type": "integer"
                },
                "from_status": {
                    "$ref": "#/definitions/db.TicketStatus"
                },
                "id": {
                    "type": "integer"
                },
                "reservation_id": {
                    "type": "integer"
                },
                "to_status": {
                    "$ref": "#/definitions/db.TicketStatus"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "db.CheckReservationTicketStatus": {
            "type": "string",
            "enum": [
                "RESERVED",
                "NOT_RESERVED"
            ],
            "x-enum-varnames": [
                "CheckReservationTicketStatusRESERVED",
                "CheckReservationTicketStatusNOTRESERVED"
            ]
        },
        "db.GetAllUserReservationRow": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "id_2": {
                    "type": "integer"
                },
                "province": {
                    "type": "string"
                },
                "province_2": {
                    "type": "string"
                }
            }
        },
        "db.GetCompletedUserReservationRow": {
            "type": "object",
            "properties": {
                "province": {
                    "type": "string"
                },
                "province_2": {
                    "type": "string"
                },
                "reservation_id": {
                    "type": "integer"
                },
                "ticket_id": {
                    "type": "integer"
                }
            }
        },
        "db.GetUserProfileRow": {
            "type": "object",
            "properties": {
                "city_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "email_verified": {
                    "type": "boolean"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "national_code": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "phone_verified": {
                    "type": "boolean"
                },
                "pic_dir": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/db.Role"
                },
                "status": {
                    "$ref": "#/definitions/db.UserStatus"
                },
                "user_id": {
                    "type": "integer"
                },
                "wallet": {
                    "type": "integer"
                }
            }
        },
        "db.GetUserRow": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "email_verified": {
                    "type": "boolean"
                },
                "hashed_password": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "phone_number": {
                    "type": "string"
                },
                "phone_verified": {
                    "type": "boolean"
                }
            }
        },
        "db.Penalty": {
            "type": "object",
            "properties": {
                "after_day": {
                    "type": "integer"
                },
                "befor_day": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "penalty_text": {
                    "type": "string"
                },
                "vehicle_id": {
                    "type": "integer"
                }
            }
        },
        "db.Profile": {
            "type": "object",
            "properties": {
                "city_id": {
                    "type": "integer"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "national_code": {
                    "type": "string"
                },
                "pic_dir": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "wallet": {
                    "type": "integer"
                }
            }
        },
        "db.Report": {
            "type": "object",
            "properties": {
                "admin_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "request_text": {
                    "type": "string"
                },
                "request_type": {
                    "$ref": "#/definitions/db.RequestType"
                },
                "reservation_id": {
                    "type": "integer"
                },
                "response_text": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "db.RequestType": {
            "type": "string",
            "enum": [
                "PAYMENT-ISSUE",
                "TRAVEL-DELAY",
                "UNEXPECTED-RESERVED",
                "ETC."
            ],
            "x-enum-varnames": [
                "RequestTypePAYMENTISSUE",
                "RequestTypeTRAVELDELAY",
                "RequestTypeUNEXPECTEDRESERVED",
                "RequestTypeETC"
            ]
        },
        "db.Role": {
            "type": "string",
            "enum": [
                "ADMIN",
                "USER"
            ],
            "x-enum-varnames": [
                "RoleADMIN",
                "RoleUSER"
            ]
        },
        "db.SearchTicketsByCitiesRow": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "arrival_time": {
                    "type": "string"
                },
                "capacity": {
                    "type": "integer"
                },
                "company_name": {
                    "type": "string"
                },
                "departure_time": {
                    "type": "string"
                },
                "destination_city_id": {
                    "type": "integer"
                },
                "destination_county": {
                    "type": "string"
                },
                "destination_province": {
                    "type": "string"
                },
                "origin_city_id": {
                    "type": "integer"
                },
                "origin_county": {
                    "type": "string"
                },
                "origin_province": {
                    "type": "string"
                },
                "route_id": {
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/db.CheckReservationTicketStatus"
                },
                "ticket_id": {
                    "type": "integer"
                },
                "vehicle_type": {
                    "$ref": "#/definitions/db.VehicleType"
                }
            }
        },
        "db.Ticket": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "arrival_time": {
                    "type": "string"
                },
                "count_stand": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "departure_time": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "route_id": {
                    "type": "integer"
                },
                "seat_id": {
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/db.CheckReservationTicketStatus"
                },
                "vehicle_id": {
                    "type": "integer"
                },
                "vehicle_type": {
                    "$ref": "#/definitions/db.VehicleType"
                }
            }
        },
        "db.TicketStatus": {
            "type": "string",
            "enum": [
                "RESERVED",
                "RESERVING",
                "CANCELED",
                "CANCELED-BY-TIME"
            ],
            "x-enum-varnames": [
                "TicketStatusRESERVED",
                "TicketStatusRESERVING",
                "TicketStatusCANCELED",
                "TicketStatusCANCELEDBYTIME"
            ]
        },
        "db.User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "email_verified": {
                    "type": "boolean"
                },
                "hashed_password": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "password_change_at": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "phone_verified": {
                    "type": "boolean"
                },
                "role": {
                    "$ref": "#/definitions/db.Role"
                },
                "status": {
                    "$ref": "#/definitions/db.UserStatus"
                }
            }
        },
        "db.UserStatus": {
            "type": "string",
            "enum": [
                "ACTIVE",
                "NON-ACTIVE"
            ],
            "x-enum-varnames": [
                "UserStatusACTIVE",
                "UserStatusNONACTIVE"
            ]
        },
        "db.VehicleType": {
            "type": "string",
            "enum": [
                "BUS",
                "TRAIN",
                "AIRPLANE"
            ],
            "x-enum-varnames": [
                "VehicleTypeBUS",
                "VehicleTypeTRAIN",
                "VehicleTypeAIRPLANE"
            ]
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}